package com.xtremetravles.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.MailSender;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.xtremetravles.util.FileUploadUtility;
import com.xtremetravlesbackend.dao.UserDao;
import com.xtremetravlesbackend.dto.User;

@Controller
public class LoginRegisterController {

	@Autowired
	MailSender mailsender;

	@Autowired
	UserDao userDao;
	
	//add agent registration page
	@RequestMapping(value ="/admin/register/user/agent",method=RequestMethod.GET)
	public ModelAndView regAgentPage(@RequestParam(name="case", required=false)String case1) {		
		ModelAndView mv = new ModelAndView("admindashboard");		
			
		User user = new User();
		mv.addObject("clickedRegister", true);
		mv.addObject("user", user);
		return mv;				
}


	//add agent 
	@RequestMapping(value="/admin/register/user/agent",method=RequestMethod.POST)
	public String regAgent(@Valid @ModelAttribute("user") User user1,BindingResult result,Model model,HttpServletRequest request){
					
		if(result.hasErrors()) {
			model.addAttribute("message", "Validation fails for registering the user!");
			model.addAttribute("clickedRegister",true);
		
			return "admindashboard";
}
		
		
		if(user1.getId()==0)
		{
	    userDao.add(user1);
	    SimpleMailMessage mail = new SimpleMailMessage();
		mail.setFrom("xtremetravles123@gmail.com");
		mail.setTo(user1.getEmail());
		mail.setSubject("Congrats!! Successfully Registered As Travel Agent at Xtreme Travels Pvt Ltd.");
		mail.setText("Dear "+user1.getFirstName()+" "+user1.getLastName()+",\n\n You are successfully registered as Travel Agent at Xtreme Travels Pvt Ltd.\n Your Username/Email: "+user1.getEmail()+" \n  Password:"+user1.getPassword()+" \n You Can login to agent dashboard using thses credentials \nthis message is generated by the system so please don't relpy to this email\n\nThanks & Regards\n Xtreme Travels Pvt. Ltd");
		try {
			mailsender.send(mail);
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Can't send the message");
		}
		
		}
		else{
			
			userDao.update(user1);
		}
		
		if(!user1.getAddressProof().getOriginalFilename().equals("") ){
			FileUploadUtility.uploadAddressProof(request, user1.getAddressProof(), user1.getAddCode()); 
		 }
		
		if(!user1.getPanCardProof().getOriginalFilename().equals("") ){
			FileUploadUtility.uploadPanCardProof(request, user1.getPanCardProof(), user1.getPanCode()); 
		 }
		
		return "redirect:/admin/dashboard";
}


//add user registration page  
	@RequestMapping(value ="/registerUser",method=RequestMethod.GET)
	public ModelAndView regUserPage() {		
		ModelAndView mv = new ModelAndView("index");		
			
		User user = new User();
		mv.addObject("clickedRegisterUser", true);
		mv.addObject("user", user);
		return mv;				
}
	
	

	//add normal user to the database   
			@RequestMapping(value ="/register/user/normal")
			public ModelAndView regUser(@RequestParam("firstName") String fname,@RequestParam("lastName") String lname,@RequestParam("email") String email,@RequestParam("contactNumber") String contact,@RequestParam("password") String password) {		
				ModelAndView mv = new ModelAndView("index");
				mv.addObject("checkOtp", true);
				int otp = (int) (Math.random() * 9000) + 100000;
				mv.addObject("fname", fname);
				mv.addObject("lname", lname);
				mv.addObject("contact", contact);
				mv.addObject("email", email);
				mv.addObject("password", password);
				mv.addObject("otp", otp);
				SimpleMailMessage mail = new SimpleMailMessage();
				mail.setFrom("xtremetravles123@gmail.com");
				mail.setTo(email);
				mail.setSubject("One Time Password");
				mail.setText("Dear "+fname+" "+lname+",\n\nyour one time password(OTP) for your Registration is " + otp+"\nthis message is generated by the system so please don't relpy to this email\n\nThanks & Regards\n Xtreme Travels Pvt. Ltd");
				try {
					mailsender.send(mail);
				} catch (Exception e) {
					e.printStackTrace();
					System.out.println("Can't send the message");
				}
				
				return mv;
		}
	
	

	@RequestMapping(value = { "/resend/otp" })
	public ModelAndView resendOtp(@RequestParam("fname") String fname,@RequestParam("lName") String lname,@RequestParam("email") String email,@RequestParam("contact") String contact,@RequestParam("password") String password) {		
		ModelAndView mv = new ModelAndView("index");
		mv.addObject("checkOtp", true);
		int otp = (int) (Math.random() * 9000) + 100000;
		mv.addObject("fname", fname);
		mv.addObject("lname", lname);
		mv.addObject("contact", contact);
		mv.addObject("email", email);
		mv.addObject("password", password);
		mv.addObject("otp", otp);
		SimpleMailMessage mail = new SimpleMailMessage();
		mail.setFrom("xtremetravles123@gmail.com");
		mail.setTo(email);
		mail.setSubject("One Time Password");
		mail.setText("Dear "+fname+" "+lname+",\n\nyour one time password(OTP) for your Registration is " + otp+"\nthis message is generated by the system so please don't relpy to this email\n\nThanks & Regards\n Xtreme Travels Pvt. Ltd");
		try {
			mailsender.send(mail);
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Can't send the message");
		}
		
		return mv;
}



	
			@RequestMapping(value ="/adduser")
			public String addUser(@RequestParam("firstname") String fname,@RequestParam("lastname") String lname,@RequestParam("email") String email,@RequestParam("number") String contact,@RequestParam("password") String password) {		
				
				User user = new User();
				user.setFirstName(fname);
				user.setLastName(lname);
				user.setEmail(email);
				user.setContactNumber(contact);
				user.setPassword(password);
				user.setActive(true);
				user.setRole("USER");
				
				userDao.add(user);
				
				return "redirect:/login";	
				
		}
	
			
			@RequestMapping(value={"/forgetpassword"})
			public ModelAndView fogetPassword()
			{
				ModelAndView mv=new ModelAndView("index2");
				mv.addObject("title", "forgetpassword");
				mv.addObject("clickedForPass", true);
				return mv;
			}
			
			@RequestMapping(value = { "/forgetpassword/otp" })
			public ModelAndView forgetPasswordOTP(@RequestParam("email") String email) 
			{
				ModelAndView mv = new ModelAndView("index2");
				mv.addObject("title", "OTP");
				mv.addObject("userClickForPassCheck", true);
				User user = userDao.getUserByEmail(email);
				String firstname=user.getFirstName();
				String lastname=user.getLastName();
				mv.addObject("email",email);
				int otp = (int) (Math.random() * 9000) + 100000;
				mv.addObject("otp",otp);
				SimpleMailMessage mail = new SimpleMailMessage();
				mail.setFrom("xtremetravles123@gmail.com");
				mail.setTo(email);
				mail.setSubject("One Time Password");
				mail.setText("Dear "+firstname+" "+lastname+",\n\nyour one time password(OTP) for Changing your password is " + otp+"\nthis message is generated by the system so please don't relpy to this email\n\nThanks & Regards\n Xtreme Travels Pvt. Ltd");
				try {
					mailsender.send(mail);
				} catch (Exception e) {
					e.printStackTrace();
					System.out.println("Can't send the message");
				}

				return mv;
			}
			@RequestMapping(value = { "/forgetpassword/resend/forgetpasswordotp" })
			public ModelAndView forgetPasswordReSendOTP(@RequestParam("email") String email) 
			{
				ModelAndView mv = new ModelAndView("index2");
				mv.addObject("title", "OTP");
				mv.addObject("userClickForPassCheck", true);
				User user = userDao.getUserByEmail(email);
				String firstname=user.getFirstName();
				String lastname=user.getLastName();
				mv.addObject("email",email);
				int otp = (int) (Math.random() * 9000) + 100000;
				mv.addObject("otp",otp);
				SimpleMailMessage mail = new SimpleMailMessage();
				mail.setFrom("xtremetravles123@gmail.com");
				mail.setTo(email);
				mail.setSubject("One Time Password");
				mail.setText("Dear "+firstname+" "+lastname+",\n\nyour one time password(OTP) for Changing your password is " + otp+"\nthis message is generated by the system so please don't relpy to this email\n\nThanks & Regards\n Xtreme Travels Pvt. Ltd");
				try {
					mailsender.send(mail);
				} catch (Exception e) {
					e.printStackTrace();
					System.out.println("Can't send the message");
				}

				return mv;
			}
			
			@RequestMapping(value={"/newpassword"})
			public ModelAndView newPassword(@RequestParam("email") String email)
			{
				ModelAndView mv=new ModelAndView("index2");
				mv.addObject("userClickNewPass", true);
				mv.addObject("title", "new-password");
				mv.addObject("email", email);
				return mv;
			}
			
			
			@RequestMapping(value={"/update/password"})
			public String updatePassword(@RequestParam("password") String password,@RequestParam("email") String email)
			{
				User user = userDao.getUserByEmail(email);
				user.setPassword(password);
				userDao.update(user);
				return "redirect:/login";
			}
			
			
			
			//provide login page to admin,user,agent  
			@RequestMapping(value="/login")
			public ModelAndView feedLoginPage(@RequestParam(name="error", required = false) String error,@RequestParam(name="logout", required = false) String logout) {		
				ModelAndView mv = new ModelAndView("index");	
				
				if(error!=null) {
					mv.addObject("message", "Username and Password is invalid!");
				}
				
				if(logout!=null) {
					mv.addObject("logout", "You have logged out successfully!");
				}
				
				mv.addObject("clickFeedLogin", true);
				return mv;				
		}
				
		
			
		
			@RequestMapping(value="/logout")
			public String logout(HttpServletRequest request, HttpServletResponse response) {
				
				Authentication auth = SecurityContextHolder.getContext().getAuthentication();
			    if (auth != null){    
			        new SecurityContextLogoutHandler().logout(request, response, auth);
			    }
				
				return "redirect:/login?logout=logout";
			}	
			
			@RequestMapping(value="/access-denied")
			public ModelAndView accessDenied() {
				ModelAndView mv = new ModelAndView("error");		
				mv.addObject("errorTitle", "Aha! Caught You.");		
				mv.addObject("errorDescription", "You are not authorized to view this page!");		
				mv.addObject("title", "403 Access Denied");		
				return mv;
			}
			


	
}
